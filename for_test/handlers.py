"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∫–æ–º–∞–Ω–¥ —Ç–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ Telegram-–±–æ—Ç—ñ.

–ú—ñ—Å—Ç–∏—Ç—å —Ñ—É–Ω–∫—Ü—ñ—ó-–æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Å—Ü–µ–Ω–∞—Ä—ñ—ó–≤ –≤–∑–∞—î–º–æ–¥—ñ—ó,
—Ç–∞–∫–∏—Ö —è–∫ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞, –≤–∏–±—ñ—Ä –º–æ–≤–∏, –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó,
–∞ —Ç–∞–∫–æ–∂ –±–∞–≥–∞—Ç–æ–µ—Ç–∞–ø–Ω–∏–π –¥—ñ–∞–ª–æ–≥ –¥–ª—è –∑–∞–ø–∏—Å—É –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é.
"""
import json # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞

from telegram import Update # –°—Ç–æ—Ä–æ–Ω–Ω—è –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞
from telegram.ext import ( # –°—Ç–æ—Ä–æ–Ω–Ω—è –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞
    CommandHandler, MessageHandler, CallbackQueryHandler,
    ContextTypes, ConversationHandler, filters
)
from utils import ( # –õ–æ–∫–∞–ª—å–Ω–∏–π –º–æ–¥—É–ª—å
    load_language, set_language, get_faq_answer, get_court_info,
    get_available_dates, get_available_times_for_date,
    save_appointment
)
from keyboards import ( # –õ–æ–∫–∞–ª—å–Ω–∏–π –º–æ–¥—É–ª—å
    get_main_menu, get_language_keyboard, get_faq_keyboard, get_inline_keyboard
)

# –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Å—Ç–∞–Ω—ñ–≤ –¥–ª—è ConversationHandler
LANG_SELECT, ASK_NAME, ASK_DATE, ASK_TIME = range(4)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start.

    –ù–∞–¥—Å–∏–ª–∞—î –≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –ø—Ä–æ–ø–æ–Ω—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –æ–±—Ä–∞—Ç–∏ –º–æ–≤—É —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
    –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —ñ–Ω–ª–∞–π–Ω-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏. –¶–µ –ø–æ—á–∞—Ç–∫–æ–≤–∞ —Ç–æ—á–∫–∞ –≤—Ö–æ–¥—É –≤ –±–æ—Ç–∞.

    :param update: –û–±'—î–∫—Ç, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—Ö—ñ–¥–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è (–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è).
    :type update: telegram.Update
    :param context: –û–±'—î–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.
    :type context: telegram.ext.ContextTypes.DEFAULT_TYPE
    :returns: –ù–∞—Å—Ç—É–ø–Ω–∏–π —Å—Ç–∞–Ω –¥–ª—è ConversationHandler.
    :rtype: int
    """
    await update.message.reply_text(
        "üåê –û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É / Choose language:", reply_markup=get_language_keyboard()
    )
    return LANG_SELECT

async def language_selected(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–æ–±–Ω–∏–∫ –≤–∏–±–æ—Ä—É –º–æ–≤–∏.

    –ó–±–µ—Ä—ñ–≥–∞—î –æ–±—Ä–∞–Ω—É –º–æ–≤—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (—É–∫—Ä–∞—ó–Ω—Å—å–∫—É –∞–±–æ –∞–Ω–≥–ª—ñ–π—Å—å–∫—É)
    —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –±–æ—Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —Ü—å–æ–≥–æ –≤–∏–±–æ—Ä—É.

    :param update: –û–±'—î–∫—Ç, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—Ö—ñ–¥–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è (callback_query).
    :type update: telegram.Update
    :param context: –û–±'—î–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.
    :type context: telegram.ext.ContextTypes.DEFAULT_TYPE
    :returns: –ù–∞—Å—Ç—É–ø–Ω–∏–π —Å—Ç–∞–Ω –¥–ª—è ConversationHandler, –∑–∞–≤–µ—Ä—à—É—é—á–∏ –≤–∏–±—ñ—Ä –º–æ–≤–∏.
    :rtype: int
    """
    lang = update.callback_query.data
    user_id = update.effective_user.id
    set_language(user_id, lang)
    await update.callback_query.answer()
    await update.callback_query.message.reply_text(
        "‚úÖ –ú–æ–≤—É –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!", reply_markup=get_main_menu(lang)
    )
    return ConversationHandler.END

async def show_faq(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø–æ–∫–∞–∑—É —Å–ø–∏—Å–∫—É –ø–æ—à–∏—Ä–µ–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å (FAQ).

    –í—ñ–¥–ø—Ä–∞–≤–ª—è—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –¥–æ—Å—Ç—É–ø–Ω–∏–º–∏ –ø–∏—Ç–∞–Ω–Ω—è–º–∏ FAQ
    –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –æ–±—Ä–∞–Ω–æ—ó –º–æ–≤–∏.

    :param update: –û–±'—î–∫—Ç, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—Ö—ñ–¥–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.
    :type update: telegram.Update
    :param context: –û–±'—î–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.
    :type context: telegram.ext.ContextTypes.DEFAULT_TYPE
    """
    lang = load_language(update.effective_user.id)
    await update.message.reply_text("‚ùì –û–±–µ—Ä—ñ—Ç—å –ø–∏—Ç–∞–Ω–Ω—è:", reply_markup=get_faq_keyboard(lang))

async def answer_faq(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –Ω–∞–¥–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –≤–∏–±—Ä–∞–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è –∑ FAQ.

    –û—Ç—Ä–∏–º—É—î —Ç–µ–∫—Å—Ç –ø–∏—Ç–∞–Ω–Ω—è, –∑–Ω–∞—Ö–æ–¥–∏—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å —É –±–∞–∑—ñ –∑–Ω–∞–Ω—å
    (faq.json) —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î —ó—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ.

    :param update: –û–±'—î–∫—Ç, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—Ö—ñ–¥–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è (–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è).
    :type update: telegram.Update
    :param context: –û–±'—î–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.
    :type context: telegram.ext.ContextTypes.DEFAULT_TYPE
    """
    lang = load_language(update.effective_user.id)
    question = update.message.text
    answer = get_faq_answer(lang, question)
    await update.message.reply_text(answer, reply_markup=get_main_menu(lang))

async def show_court_info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –Ω–∞–¥–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Å—É–¥–æ–≤—É —É—Å—Ç–∞–Ω–æ–≤—É.

    –í—ñ–¥–ø—Ä–∞–≤–ª—è—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É —Ç–∞ –∑–∞–≥–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Å—É–¥
    (–∞–¥—Ä–µ—Å–∞, –≥—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏, —Ç–µ–ª–µ—Ñ–æ–Ω, email) –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –æ–±—Ä–∞–Ω–æ—ó –º–æ–≤–∏.

    :param update: –û–±'—î–∫—Ç, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—Ö—ñ–¥–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.
    :type update: telegram.Update
    :param context: –û–±'—î–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.
    :type context: telegram.ext.ContextTypes.DEFAULT_TYPE
    """
    lang = load_language(update.effective_user.id)
    info = get_court_info(lang)
    text = (
        f"üìç –ê–¥—Ä–µ—Å–∞: {info['address']}\n"
        f"üïí –ì—Ä–∞—Ñ—ñ–∫: {info['work_time']}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {info['phone']}\n"
        f"‚úâÔ∏è Email: {info['email']}"
    )
    await update.message.reply_text(text)

async def show_court_schedule(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–æ–∑–∫–ª–∞–¥—É —Å—É–¥–æ–≤–∏—Ö –∑–∞—Å—ñ–¥–∞–Ω—å.

    –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ä–æ–∑–∫–ª–∞–¥ –∑ court_schedule.json
    —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î —ó—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ —É —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–æ–º—É –≤–∏–≥–ª—è–¥—ñ.

    :param update: –û–±'—î–∫—Ç, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—Ö—ñ–¥–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.
    :type update: telegram.Update
    :param context: –û–±'—î–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.
    :type context: telegram.ext.ContextTypes.DEFAULT_TYPE
    """
    with open("court_schedule.json", "r", encoding="utf-8") as file_handle:
        data = json.load(file_handle)
    msg = "üìÖ –†–æ–∑–∫–ª–∞–¥ –∑–∞—Å—ñ–¥–∞–Ω—å:\n"
    for item in data:
        msg += (
            f"{item['date']} ‚Äì –°–ø—Ä–∞–≤–∞ {item['case']}: {item['time']},"
            f" –°—É–¥–¥—è {item['judge']}\n"
        )
    await update.message.reply_text(msg)

async def show_contacts(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –Ω–∞–¥–∞–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó —ñ–Ω—à–∏—Ö —É—Å—Ç–∞–Ω–æ–≤.

    –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –∑ contacts.json
    —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î —ó—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –æ–±—Ä–∞–Ω–æ—ó –º–æ–≤–∏.

    :param update: –û–±'—î–∫—Ç, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—Ö—ñ–¥–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.
    :type update: telegram.Update
    :param context: –û–±'—î–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.
    :type context: telegram.ext.ContextTypes.DEFAULT_TYPE
    """
    lang = load_language(update.effective_user.id)
    with open("contacts.json", "r", encoding="utf-8") as file_handle:
        data = json.load(file_handle)
    entries = data.get(lang, [])
    msg = "üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏ —ñ–Ω—à–∏—Ö —É—Å—Ç–∞–Ω–æ–≤:\n"
    for contact in entries:
        msg += f"üìå {contact['org']} ‚Äî {contact['phone']}\n"
    await update.message.reply_text(msg)

async def ask_name(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü–æ—á–∞—Ç–æ–∫ –¥—ñ–∞–ª–æ–≥—É –∑–∞–ø–∏—Å—É –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é.

    –ó–∞–ø–∏—Ç—É—î —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –π–æ–≥–æ –ü–Ü–ë –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ–≥–æ –∑–∞–ø–∏—Å—É.
    –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å –¥—ñ–∞–ª–æ–≥ —É —Å—Ç–∞–Ω ASK_NAME.

    :param update: –û–±'—î–∫—Ç, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—Ö—ñ–¥–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è (–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è).
    :type update: telegram.Update
    :param context: –û–±'—î–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è.
    :type context: telegram.ext.ContextTypes.DEFAULT_TYPE
    :returns: –ù–∞—Å—Ç—É–ø–Ω–∏–π —Å—Ç–∞–Ω –¥—ñ–∞–ª–æ–≥—É.
    :rtype: int
    """
    await update.message.reply_text("üìù –í–≤–µ–¥—ñ—Ç—å –ü–Ü–ë –¥–ª—è –∑–∞–ø–∏—Å—É:")
    return ASK_NAME

async def ask_date(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –¥—ñ–∞–ª–æ–≥—É –∑–∞–ø–∏—Å—É –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é.

    –ó–±–µ—Ä—ñ–≥–∞—î –≤–≤–µ–¥–µ–Ω–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –ü–Ü–ë —Ç–∞ –ø—Ä–æ–ø–æ–Ω—É—î –¥–æ—Å—Ç—É–ø–Ω—ñ –¥–∞—Ç–∏
    –¥–ª—è –∑–∞–ø–∏—Å—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —ñ–Ω–ª–∞–π–Ω-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏. –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å –¥—ñ–∞–ª–æ–≥ —É —Å—Ç–∞–Ω ASK_DATE.

    :param update: –û–±'—î–∫—Ç, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—Ö—ñ–¥–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è (–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –ü–Ü–ë).
    :type update: telegram.Update
    :param context: –û–±'—î–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è, –∑–±–µ—Ä—ñ–≥–∞—î user_data.
    :type context: telegram.ext.ContextTypes.DEFAULT_TYPE
    :returns: –ù–∞—Å—Ç—É–ø–Ω–∏–π —Å—Ç–∞–Ω –¥—ñ–∞–ª–æ–≥—É.
    :rtype: int
    """
    context.user_data["name"] = update.message.text
    dates = get_available_dates()
    await update.message.reply_text("üìÖ –û–±–µ—Ä—ñ—Ç—å –¥–∞—Ç—É:", reply_markup=get_inline_keyboard(dates))
    return ASK_DATE

async def ask_time(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –¥—ñ–∞–ª–æ–≥—É –∑–∞–ø–∏—Å—É –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é.

    –ó–±–µ—Ä—ñ–≥–∞—î –æ–±—Ä–∞–Ω—É –¥–∞—Ç—É —Ç–∞ –ø—Ä–æ–ø–æ–Ω—É—î –¥–æ—Å—Ç—É–ø–Ω—ñ —á–∞—Å–æ–≤—ñ —Å–ª–æ—Ç–∏
    –¥–ª—è —Ü—ñ—î—ó –¥–∞—Ç–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —ñ–Ω–ª–∞–π–Ω-–∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏. –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å –¥—ñ–∞–ª–æ–≥ —É —Å—Ç–∞–Ω ASK_TIME.

    :param update: –û–±'—î–∫—Ç, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—Ö—ñ–¥–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è (callback_query –∑ –¥–∞—Ç–æ—é).
    :type update: telegram.Update
    :param context: –û–±'—î–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è, –∑–±–µ—Ä—ñ–≥–∞—î user_data.
    :type context: telegram.ext.ContextTypes.DEFAULT_TYPE
    :returns: –ù–∞—Å—Ç—É–ø–Ω–∏–π —Å—Ç–∞–Ω –¥—ñ–∞–ª–æ–≥—É.
    :rtype: int
    """
    selected_date = update.callback_query.data
    context.user_data["selected_date"] = selected_date
    times = get_available_times_for_date(selected_date)
    await update.callback_query.answer()
    await update.callback_query.message.reply_text("‚è∞ –û–±–µ—Ä—ñ—Ç—å —á–∞—Å:", reply_markup=get_inline_keyboard(times))
    return ASK_TIME

async def confirm_time(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è –¥—ñ–∞–ª–æ–≥—É –∑–∞–ø–∏—Å—É –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é.

    –ó–±–µ—Ä—ñ–≥–∞—î –ø–æ–≤–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∑–∞–ø–∏—Å (–ü–Ü–ë, –¥–∞—Ç—É, —á–∞—Å) —É appointments.json
    —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –∑–∞–ø–∏—Å—É. –ó–∞–≤–µ—Ä—à—É—î –¥—ñ–∞–ª–æ–≥.

    :param update: –û–±'—î–∫—Ç, —â–æ –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—Ö—ñ–¥–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è (callback_query –∑ —á–∞—Å–æ–º).
    :type update: telegram.Update
    :param context: –û–±'—î–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è, –º—ñ—Å—Ç–∏—Ç—å user_data.
    :type context: telegram.ext.ContextTypes.DEFAULT_TYPE
    :returns: –ù–∞—Å—Ç—É–ø–Ω–∏–π —Å—Ç–∞–Ω –¥—ñ–∞–ª–æ–≥—É, —â–æ —Å–∏–≥–Ω–∞–ª—ñ–∑—É—î –ø—Ä–æ –π–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è.
    :rtype: int
    """
    user_id = update.effective_user.id
    lang = load_language(user_id)
    time = update.callback_query.data
    name = context.user_data.get("name", "–ë–µ–∑ —ñ–º–µ–Ω—ñ")
    save_appointment(user_id, name, time)
    await update.callback_query.answer()
    await update.callback_query.message.reply_text("‚úÖ –í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ñ!", reply_markup=get_main_menu(lang))
    return ConversationHandler.END

def register_handlers(app):
    """–†–µ—î—Å—Ç—Ä—É—î –≤—Å—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –≤ –æ–±'—î–∫—Ç—ñ Telegram Application.

    –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –¥–æ–¥–∞—î CommandHandler –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ /start, ConversationHandler
    –¥–ª—è –±–∞–≥–∞—Ç–æ–µ—Ç–∞–ø–Ω–æ–≥–æ –¥—ñ–∞–ª–æ–≥—É –∑–∞–ø–∏—Å—É –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é, –∞ —Ç–∞–∫–æ–∂ MessageHandler
    —Ç–∞ CallbackQueryHandler –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —ñ–Ω—à–∏—Ö —Ç–∏–ø—ñ–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —Ç–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω—å –∫–Ω–æ–ø–æ–∫.

    :param app: –û–±'—î–∫—Ç Application, –¥–æ —è–∫–æ–≥–æ —Ä–µ—î—Å—Ç—Ä—É—é—Ç—å—Å—è –æ–±—Ä–æ–±–Ω–∏–∫–∏.
    :type app: telegram.ext.Application
    """
    conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^(üìù|üìÖ) –ó–∞–ø–∏—Å"), ask_name)],
        states={
            LANG_SELECT: [CallbackQueryHandler(language_selected)],
            ASK_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_date)],
            ASK_DATE: [CallbackQueryHandler(ask_time)],
            ASK_TIME: [CallbackQueryHandler(confirm_time)],
        },
        fallbacks=[]
    )

    app.add_handler(CommandHandler("start", start))
    app.add_handler(conv_handler)
    app.add_handler(CallbackQueryHandler(language_selected, pattern="^(uk|en)$"))
    app.add_handler(MessageHandler(filters.Regex("^(‚ùì FAQ|‚ùì –ü–æ—à–∏—Ä–µ–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è)$"), show_faq))
    app.add_handler(MessageHandler(filters.Regex(r"^(–Ø–∫|How).*"), answer_faq))
    app.add_handler(MessageHandler(filters.Regex("^(‚ÑπÔ∏è|üìç)"), show_court_info))
    app.add_handler(MessageHandler(
        filters.Regex("^(üóì –ö–∞–ª–µ–Ω–¥–∞—Ä –∑–∞—Å—ñ–¥–∞–Ω—å|üóì Hearing Calendar)$"),
        show_court_schedule
    ))
    app.add_handler(MessageHandler(
        filters.Regex("^(üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏ —ñ–Ω—à–∏—Ö —É—Å—Ç–∞–Ω–æ–≤|üìû Other Institutions)$"),
        show_contacts
    ))
